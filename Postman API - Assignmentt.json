{
	"info": {
		"_postman_id": "5609dcc9-9e41-46d8-8648-7ea19d1af7ff",
		"name": "PostmanCollection",
		"description": "This Collection consists of the four folders into which i have created requests for CRUD operations .\n\nPosititve and Negative tests are also included in each folder for every CRUD opeartion.",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "32967069",
		"_collection_link": "https://speeding-sunset-698093.postman.co/workspace/My-Workspace~f0718df3-9c15-411f-8c69-780525908ec3/collection/32967069-5609dcc9-9e41-46d8-8648-7ea19d1af7ff?action=share&source=collection_link&creator=32967069"
	},
	"item": [
		{
			"name": "POST - Create New User",
			"item": [
				{
					"name": "Create User (TC-01) [P] One should able to create user with valid Name and Valid Email",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function(){",
									"    pm.response.to.have.status(201);",
									"});",
									"var userData = pm.response.json();",
									"pm.environment.set(\"id\", userData.id);"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"var randomInt = Math.floor(Math.random() * 1000);",
									"",
									"var username = \"rahul\" + randomInt;",
									"var email = \"rahul\" + randomInt + \"@gmail.com\";",
									"",
									"pm.environment.set(\"name\", username);",
									"pm.environment.set(\"email\", email);",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer 91b3e2b169578cfdf231ba8926d23da5e10f9aeb2e44e4450021ae703b390580",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"{{name}}\",\n    \"email\": \"{{email}}\",\n    \"gender\": \"male\",\n    \"status\": \"active\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/public/v2/users",
							"host": [
								"{{url}}"
							],
							"path": [
								"public",
								"v2",
								"users"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create User (TC-02) [N] One should not able to create user with valid Name and Invalid Email format",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"var randomInt = Math.floor(Math.random() * 1000);",
									"",
									"var username = \"rahul\" + randomInt;",
									"var email = \"rahul\" + randomInt + \"gmail.com\";",
									"",
									"pm.environment.set(\"name\", username);",
									"pm.environment.set(\"email\", email);",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 422\", function(){",
									"    pm.response.to.have.status(422);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer 91b3e2b169578cfdf231ba8926d23da5e10f9aeb2e44e4450021ae703b390580",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"{{name}}\",\n    \"email\": \"{{email}}\",\n    \"gender\": \"male\",\n    \"status\": \"active\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/public/v2/users",
							"host": [
								"{{url}}"
							],
							"path": [
								"public",
								"v2",
								"users"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create User (TC-03) [N] One should not able to create user without Name and Email",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"var randomInt = Math.floor(Math.random() * 1000);",
									"",
									"var email = \"rahul\" + randomInt + \"@gmail.com\";",
									"",
									"pm.environment.set(\"email\", email);",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 422\", function(){",
									"    pm.response.to.have.status(422);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer 91b3e2b169578cfdf231ba8926d23da5e10f9aeb2e44e4450021ae703b390580",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": null,\n    \"email\": null,\n    \"gender\": \"male\",\n    \"status\": \"active\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/public/v2/users",
							"host": [
								"{{url}}"
							],
							"path": [
								"public",
								"v2",
								"users"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create User (TC-04) [N] One should not able to create user with the same Email",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"var randomInt = Math.floor(Math.random() * 1000);",
									"",
									"var email = \"rahul\" + randomInt + \"@gmail.com\";",
									"",
									"pm.environment.set(\"email\", email);",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 422\", function(){",
									"    pm.response.to.have.status(422);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer 91b3e2b169578cfdf231ba8926d23da5e10f9aeb2e44e4450021ae703b390580",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"{{name}}\",\n    \"email\": \"rahul650@gmail.com\",\n    \"gender\": \"male\",\n    \"status\": \"active\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/public/v2/users",
							"host": [
								"{{url}}"
							],
							"path": [
								"public",
								"v2",
								"users"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create User (TC-05) [N] One should not able to create user without Proper Authentication",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"var randomInt = Math.floor(Math.random() * 1000);",
									"",
									"var username = \"rahul\" + randomInt;",
									"var email = \"rahul\" + randomInt + \"@gmail.com\";",
									"",
									"pm.environment.set(\"name\", username);",
									"pm.environment.set(\"email\", email);",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 401\", function(){",
									"    pm.response.to.have.status(401);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer 91b3e2b169578cfdf231ba8926d23da5e10f9aeb2e44e4450021ae703b390580",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"{{name}}\",\n    \"email\": \"{{email}}\",\n    \"gender\": \"male\",\n    \"status\": \"active\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/public/v2/users",
							"host": [
								"{{url}}"
							],
							"path": [
								"public",
								"v2",
								"users"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create User (TC-06) [N] One should not able to create user with Incorrect Authentication",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"var randomInt = Math.floor(Math.random() * 1000);",
									"",
									"var username = \"rahul\" + randomInt;",
									"var email = \"rahul\" + randomInt + \"@gmail.com\";",
									"",
									"pm.environment.set(\"name\", username);",
									"pm.environment.set(\"email\", email);",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 401\", function(){",
									"    pm.response.to.have.status(401);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer 91b3e2b169578cfdf231ba8926d23da54660f9aeb2e44e4450021ae703b390580",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"{{name}}\",\n    \"email\": \"{{email}}\",\n    \"gender\": \"male\",\n    \"status\": \"active\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/public/v2/users",
							"host": [
								"{{url}}"
							],
							"path": [
								"public",
								"v2",
								"users"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create User (TC-07) [P] One should not able to create user with Gender as Null",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"var randomInt = Math.floor(Math.random() * 1000);",
									"",
									"var username = \"rahul\" + randomInt;",
									"var email = \"rahul\" + randomInt + \"@gmail.com\";",
									"",
									"pm.environment.set(\"name\", username);",
									"pm.environment.set(\"email\", email);",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 422\", function(){",
									"    pm.response.to.have.status(422);",
									"});",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer 91b3e2b169578cfdf231ba8926d23da5e10f9aeb2e44e4450021ae703b390580",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"{{name}}\",\n    \"email\": \"{{email}}\",\n    \"gender\": null,\n    \"status\": \"active\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/public/v2/users",
							"host": [
								"{{url}}"
							],
							"path": [
								"public",
								"v2",
								"users"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create User (TC-08) [P] One should not able to create user with Status as Null",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"var randomInt = Math.floor(Math.random() * 1000);",
									"",
									"var username = \"rahul\" + randomInt;",
									"var email = \"rahul\" + randomInt + \"@gmail.com\";",
									"",
									"pm.environment.set(\"name\", username);",
									"pm.environment.set(\"email\", email);",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 422\", function(){",
									"    pm.response.to.have.status(422);",
									"});",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer 91b3e2b169578cfdf231ba8926d23da5e10f9aeb2e44e4450021ae703b390580",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"{{name}}\",\n    \"email\": \"{{email}}\",\n    \"gender\": \"male\",\n    \"status\": null\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/public/v2/users",
							"host": [
								"{{url}}"
							],
							"path": [
								"public",
								"v2",
								"users"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "GET - Get User",
			"item": [
				{
					"name": "Fetch User(TC-01)[P] One should able to get the user with Valid Id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function(){",
									"    pm.response.to.have.status(200);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer 91b3e2b169578cfdf231ba8926d23da5e10f9aeb2e44e4450021ae703b390580",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{url}}/public/v2/users/{{id}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"public",
								"v2",
								"users",
								"{{id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Fetch User(TC-02)[P] One should able to get all the users without specifying the user id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function(){",
									"    pm.response.to.have.status(200);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer 91b3e2b169578cfdf231ba8926d23da5e10f9aeb2e44e4450021ae703b390580",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{url}}/public/v2/users",
							"host": [
								"{{url}}"
							],
							"path": [
								"public",
								"v2",
								"users"
							]
						}
					},
					"response": []
				},
				{
					"name": "Fetch User(TC-03)[P] One should not found the user with invalid id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function(){",
									"    pm.response.to.have.status(404);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer 91b3e2b169578cfdf231ba8926d23da5e10f9aeb2e44e4450021ae703b390580",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{url}}/public/v2/users/15465",
							"host": [
								"{{url}}"
							],
							"path": [
								"public",
								"v2",
								"users",
								"15465"
							]
						}
					},
					"response": []
				},
				{
					"name": "Fetch User(TC-04)[N] One should not able to find the user with Incorrect Id format",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function(){",
									"    pm.response.to.have.status(404);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer 91b3e2b169578cfdf231ba8926d23da5e10f9aeb2e44e4450021ae703b390580",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{url}}/public/v2/users/1546&3@",
							"host": [
								"{{url}}"
							],
							"path": [
								"public",
								"v2",
								"users",
								"1546&3@"
							]
						}
					},
					"response": []
				},
				{
					"name": "Fetch User(TC-05)[N] One should not able to find the user without proper Authentication",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 401\", function(){",
									"    pm.response.to.have.status(401);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer 91b3e2b169578cfdf231ba8926d23da5e10f9aeb2e44e4450021ae703b390580jfhtfhdcttghgfvyhg",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{url}}/public/v2/users/{{id}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"public",
								"v2",
								"users",
								"{{id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Fetch User(TC-06)[N] One should not able to find the user with empty User Id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function(){",
									"    pm.response.to.have.status(404);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer 91b3e2b169578cfdf231ba8926d23da5e10f9aeb2e44e4450021ae703b390580",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{url}}/public/v2/users/ ",
							"host": [
								"{{url}}"
							],
							"path": [
								"public",
								"v2",
								"users",
								" "
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "UPDATE - Update User",
			"item": [
				{
					"name": "Update User(TC-01)[P] One should be able to update the user details with valid user Id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function(){",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer 91b3e2b169578cfdf231ba8926d23da5e10f9aeb2e44e4450021ae703b390580",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"{{name}}\",\n    \"email\": \"{{email}}\",\n    \"gender\": \"male\",\n    \"status\": \"active\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/public/v2/users/{{id}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"public",
								"v2",
								"users",
								"{{id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update User(TC-02)[P] One should be able to update the user details with valid user id Special Characters",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function(){",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer 91b3e2b169578cfdf231ba8926d23da5e10f9aeb2e44e4450021ae703b390580",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"rahul142400@$%$\",\n    \"email\": \"rahul42400#$%@gmail.com\",\n    \"gender\": \"male\",\n    \"status\": \"active\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/public/v2/users/{{id}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"public",
								"v2",
								"users",
								"{{id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update User(TC-03)[P] One should be able to update the user details of the same id with multiple times",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function(){",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer 91b3e2b169578cfdf231ba8926d23da5e10f9aeb2e44e4450021ae703b390580",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"rahul_multiple changes\",\n    \"email\": \"rahulmultiplechanges%@gmail.com\",\n    \"gender\": \"male\",\n    \"status\": \"active\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/public/v2/users/{{id}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"public",
								"v2",
								"users",
								"{{id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update User(TC-04)[N] One should not be able to update the user details with wrong User Id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function(){",
									"    pm.response.to.have.status(404);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer 91b3e2b169578cfdf231ba8926d23da5e10f9aeb2e44e4450021ae703b390580",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"rahul_multiple changes\",\n    \"email\": \"rahulmultiplechanges%@gmail.com\",\n    \"gender\": \"male\",\n    \"status\": \"active\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/public/v2/users/48454#f",
							"host": [
								"{{url}}"
							],
							"path": [
								"public",
								"v2",
								"users",
								"48454"
							],
							"hash": "f"
						}
					},
					"response": []
				},
				{
					"name": "Update User(TC-05)[N] One should not be able to update the user details with blank User Id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function(){",
									"    pm.response.to.have.status(404);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer 91b3e2b169578cfdf231ba8926d23da5e10f9aeb2e44e4450021ae703b390580",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"rahul_multiple changes\",\n    \"email\": \"rahulmultiplechanges%@gmail.com\",\n    \"gender\": \"male\",\n    \"status\": \"active\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/public/v2/users/",
							"host": [
								"{{url}}"
							],
							"path": [
								"public",
								"v2",
								"users",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Update User(TC-06)[N] One should not be able to update the user details with Incorrect Authentication",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 401\", function(){",
									"    pm.response.to.have.status(401);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer 91b3e2b169578cfdf231ba8926d23da5e10f9aeb2e44e4450021ae703b390580abcd",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"rahul_multiple changes\",\n    \"email\": \"rahulmultiplechanges%@gmail.com\",\n    \"gender\": \"male\",\n    \"status\": \"active\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/public/v2/users/6759304",
							"host": [
								"{{url}}"
							],
							"path": [
								"public",
								"v2",
								"users",
								"6759304"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update User(TC-07)[N] One should not be able to update the user details of the user that does not exists",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function(){",
									"    pm.response.to.have.status(404);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer 91b3e2b169578cfdf231ba8926d23da5e10f9aeb2e44e4450021ae703b390580abcd",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"rahul_multiple changes\",\n    \"email\": \"rahulmultiplechanges%@gmail.com\",\n    \"gender\": \"male\",\n    \"status\": \"active\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/public/v2/users/",
							"host": [
								"{{url}}"
							],
							"path": [
								"public",
								"v2",
								"users",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Update User(TC-08)[N] One should not be able to update the user details of the user that does not exists Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function(){",
									"    pm.response.to.have.status(404);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer 91b3e2b169578cfdf231ba8926d23da5e10f9aeb2e44e4450021ae703b390580abcd",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"rahul_multiple changes\",\n    \"email\": \"rahulmultiplechanges%@gmail.com\",\n    \"gender\": \"male\",\n    \"status\": \"active\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/public/v2/users/",
							"host": [
								"{{url}}"
							],
							"path": [
								"public",
								"v2",
								"users",
								""
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "DELETE - Delete User",
			"item": [
				{
					"name": "Delete User(TC-01)[P] One should be able delete user with Valid Id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 204\", function(){",
									"    pm.response.to.have.status(204);",
									"});",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer 91b3e2b169578cfdf231ba8926d23da5e10f9aeb2e44e4450021ae703b390580",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/public/v2/users/{{id}}\n",
							"host": [
								"{{url}}"
							],
							"path": [
								"public",
								"v2",
								"users",
								"{{id}}\n"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete User(TC-02)[F] One should not be able delete user with Invalid Id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function(){",
									"    pm.response.to.have.status(404);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer 91b3e2b169578cfdf231ba8926d23da5e10f9aeb2e44e4450021ae703b390580",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/public/v2/users/6759330028\n",
							"host": [
								"{{url}}"
							],
							"path": [
								"public",
								"v2",
								"users",
								"6759330028\n"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete User(TC-03)[F] One should not be able delete user with empty user id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function(){",
									"    pm.response.to.have.status(404);",
									"});",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer 91b3e2b169578cfdf231ba8926d23da5e10f9aeb2e44e4450021ae703b390580",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/public/v2/users/{{ }}\n",
							"host": [
								"{{url}}"
							],
							"path": [
								"public",
								"v2",
								"users",
								"{{ }}\n"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete User(TC-04)[F] One should not be able delete the user of Non Existing user",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function(){",
									"    pm.response.to.have.status(404);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer 91b3e2b169578cfdf231ba8926d23da5e10f9aeb2e44e4450021ae703b390580",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/public/v2/users/484541964\n",
							"host": [
								"{{url}}"
							],
							"path": [
								"public",
								"v2",
								"users",
								"484541964\n"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete User(TC-05)[F] One should not be able delete the user without proper Authentication",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 401\", function(){",
									"    pm.response.to.have.status(401);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer 91b3e2b169578cfdf231ba8926d23da5e10f9aeb2e44e4450021ae703b390580xyz",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/public/v2/users/484541968\n",
							"host": [
								"{{url}}"
							],
							"path": [
								"public",
								"v2",
								"users",
								"484541968\n"
							]
						}
					},
					"response": []
				}
			]
		}
	]
}